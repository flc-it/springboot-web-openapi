<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.flcit.springboot.web</groupId>
    <artifactId>springboot-web-openapi</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>springboot-web-openapi</name>
    <description>Librairie pour la documentation Web Open API dans une API Spring Boot</description>
    <url>https://github.com/flc-it/springboot-web-openapi</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
         <developer>
             <name>Florian Lestic</name>
             <email>florian.lestic@gmail.com</email>
             <organization>FLC</organization>
             <organizationUrl>https://www.flcit.org</organizationUrl>
         </developer>
    </developers>

    <!-- Paramètres gestionnaire de version -->
    <scm>
        <connection>scm:git:git://github.com/flc-it/springboot-web-openapi.git</connection>
        <developerConnection>scm:git:ssh://github.com/flc-it/springboot-web-openapi.git</developerConnection>
        <url>https://github.com/flc-it/springboot-web-openapi</url>
        <tag>HEAD</tag>
    </scm>

    <!-- Paramètres gestionnaire de ticket -->
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/flc-it/springboot-web-openapi/issues</url>
    </issueManagement>

    <!-- Paramétrage du server de livraison -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring.boot.version>2.7.18</spring.boot.version>
        <!-- Internal dependencies version -->
        <org.flcit.springboot.commons.core.version>1.0.0-SNAPSHOT</org.flcit.springboot.commons.core.version>
        <org.flcit.springboot.commons.test.version>1.0.0-SNAPSHOT</org.flcit.springboot.commons.test.version>
        <!-- External dependency version -->
        <org.springdoc.version>1.7.0</org.springdoc.version>
        <!-- surefire -->
        <surefire.outputDir>${project.build.directory}/surefire-reports</surefire.outputDir>
        <!-- jacoco -->
        <jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>
        <!-- sonar -->
        <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <!-- dependencies management -->
    <dependencyManagement>
        <dependencies>
            <!-- Import dependency management from Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.flcit.springboot.commons</groupId>
            <artifactId>springboot-commons-core</artifactId>
            <version>${org.flcit.springboot.commons.core.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${org.springdoc.version}</version>
        </dependency>
        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Tests -->
        <dependency>
            <groupId>org.flcit.springboot.commons</groupId>
            <artifactId>springboot-commons-test</artifactId>
            <version>${org.flcit.springboot.commons.test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.sonar-plugins.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>3.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <!-- plugin jacoco: Utilisé pour produire les rapports d'analyse de code 
                    pour Sonar -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.10</version>
                    <executions>
                        <execution>
                            <id>merge-results</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}/jacoco</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/jacoco-aggregate/aggregate.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-merge-report</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco-aggregate/aggregate.exec</dataFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.2.7</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- surefire plugin Utilisé pour lancer les tests unitaires et exclure 
                les tests d'intégration. Ils seront lancés par le plugin failsafe -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <argLine>-Xmx1G ${jacoco.agent.ut.arg}</argLine>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- failsafe plugin: Utilisé pour les tests d'intégration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <reportsDirectory>${surefire.outputDir}</reportsDirectory>
                    <argLine>-Xmx1G ${jacoco.agent.it.arg}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- plugin jacoco: Utilisé pour produire les rapports d'analyse de code 
                pour Sonar -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
                        to be passed to the JVM hosting the code being tested. -->
                    <execution>
                        <id>prepare-ut-agent</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.outputDir}/${jacoco.out.ut.file}</destFile>
                            <propertyName>jacoco.agent.ut.arg</propertyName>
                            <append>true</append>
                        </configuration>
                    </execution>
                    <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
                        to be passed to the JVM hosting the code being tested. -->
                    <execution>
                        <id>prepare-it-agent</id>
                        <!-- moved to package phase to be sure all pre-integration test have 
                            it already set to bring up environments with jacoco agent as JVM params -->
                        <phase>package</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.outputDir}/${jacoco.out.it.file}</destFile>
                            <propertyName>jacoco.agent.it.arg</propertyName>
                            <append>true</append>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
